{"version":3,"sources":["components/Form/Form.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-selector.js","components/Form/Form.js","components/ContactList/ContactList.js","components/Filter/Filter.js","pages/ContactsPage/ContactsPage.js"],"names":["module","exports","getItems","state","contacts","items","getFilter","filter","filteredContacts","lowerCaseFilter","toLowerCase","person","name","includes","getFiltredContacts","Form","dispatch","useDispatch","useSelector","useState","setName","number","setNumber","handleChange","e","currentTarget","value","className","s","form","onSubmit","preventDefault","find","contact","checkName","checkNumber","test","checkValidNumber","addContacts","alert","label","input","type","onChange","autoComplete","button","ContactList","list","map","id","item","btn","onClick","deleteContacts","icon","Filter","updateFilter","target","ContactsPage","container","Section","title"],"mappings":"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","file":"static/js/4.323fc104.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Form_container__zx8Rq\",\"form\":\"Form_form__1XeZI\",\"label\":\"Form_label__1_LsE\",\"input\":\"Form_input__A_5pu\",\"button\":\"Form_button__S2bVG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3vcev\",\"item\":\"ContactList_item__3K0CJ\",\"btn\":\"ContactList_btn__ZWCAm\",\"icon\":\"ContactList_icon__f7-cI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1opbi\",\"input\":\"Filter_input__3w6ZM\"};","export const getItems = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const filteredContacts = state => {\n  const contacts = getItems(state);\n  const filter = getFilter(state);\n\n  const getFiltredContacts = contacts => {\n    const lowerCaseFilter = filter.toLowerCase();\n    return contacts.filter(person =>\n      person.name.toLowerCase().includes(lowerCaseFilter),\n    );\n  };\n  return getFiltredContacts(contacts);\n};\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContacts } from '../../redux/contacts/contacts-action';\nimport { getItems } from '../../redux/contacts/contacts-selector';\nimport s from './Form.module.css';\n\nfunction Form() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getItems);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { value, name } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n  const resetInput = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const checkName = name => {\n    return contacts.find(\n      contact =>\n        contact.name.toLowerCase() === name.toLowerCase(),\n    );\n  };\n\n  const checkNumber = number => {\n    return contacts.find(\n      contact => contact.number === number,\n    );\n  };\n\n  const checkValidNumber = number => {\n    return !/\\d{3}[-]\\d{2}[-]\\d{2}/g.test(number);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (checkName(name)) {\n      alert(`${name} is already in your phonebook, bro!`);\n    } else if (checkNumber(number)) {\n      alert(\n        `${number} is already in your phonebook, bro!`,\n      );\n    } else if (checkValidNumber(number)) {\n      alert(`Enter valid number please`);\n    } else {\n      dispatch(addContacts(name, number));\n    }\n    resetInput();\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          autoComplete=\"off\"\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          autoComplete=\"off\"\n        />\n      </label>\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default Form;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport s from './ContactList.module.css';\nimport { FaRegTimesCircle } from 'react-icons/fa';\nimport { deleteContacts } from '../../redux/contacts/contacts-action';\nimport { filteredContacts } from '../../redux/contacts/contacts-selector';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(filteredContacts);\n\n  return (\n    <>\n      <ul className={s.list}>\n        {contacts.map(({ id, name, number }) => (\n          <li className={s.item} key={id}>\n            <p className={s.contact}>\n              {name} : {number}\n            </p>\n            <button\n              className={s.btn}\n              type=\"button\"\n              onClick={() => dispatch(deleteContacts(id))}\n            >\n              <FaRegTimesCircle className={s.icon} />\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default ContactList;\n","import React from 'react';\nimport s from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateFilter } from '../../redux/contacts/contacts-action';\nimport { getFilter } from '../../redux/contacts/contacts-selector';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  return (\n    <label className={s.label}>\n      <p className={s.contacts}>\n        Find contacts by name\n        <input\n          className={s.input}\n          type=\"text\"\n          value={filter}\n          onChange={e =>\n            dispatch(updateFilter(e.target.value))\n          }\n        />\n      </p>\n    </label>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\n\nimport Form from '../../components/Form';\nimport Section from '../../components/Section';\nimport Contacts from '../../components/ContactList';\nimport Filter from '../../components/Filter';\nimport s from '../../components/Form/Form.module.css';\n\nfunction ContactsPage() {\n  return (\n    <div className={s.container}>\n      <Section title=\"Phonebook\">\n        <Form />\n      </Section>\n\n      <Section title=\"Contacts\">\n        <Filter />\n        <Contacts />\n      </Section>\n    </div>\n  );\n}\nexport default ContactsPage;\n"],"sourceRoot":""}